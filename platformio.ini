; PlatformIO Project Configuration File

[platformio]
default_envs = esp32-prod

[env]
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino
monitor_speed = 115200

; Filesystem & partitions
board_build.filesystem = spiffs
board_build.partitions = default_ota.csv
monitor_filters = esp32_exception_decoder, time, colorize

; Script comuni: genera versione e gestisce uploadfs
extra_scripts =
  pre:scripts/generate_version.py
  pre:scripts/uploadfs.py

; Librerie comuni
lib_deps =
  PubSubClient
  WiFi
  Wire
  ESPmDNS
  ArduinoOTA
  mobizt/ESP Mail Client @ ^3.4.21
  mathieucarbou/ESP Async WebServer @ 3.0.6
  mathieucarbou/Async TCP @ 3.1.4
  bblanchon/ArduinoJson @ ^6

; Flag comuni
build_flags =
  -include src/version_auto.h

; *** Nota porta seriale (macOS):
; Se cambi convertitore USB-seriale spesso, puoi lasciare commentato upload_port
; e usare `pio device list` per vedere quale /dev/cu.* usare, oppure
; imposta un glob (non sempre affidabile). Qui lo teniamo esplicito in prod.

[env:esp32-prod]
upload_protocol = esptool
upload_port = /dev/cu.usbserial-0001
build_flags =
  ${env.build_flags}
  -DCONFIG_ENV_PROD
custom_flags = USE_NEXT_VERSION

[env:esp32-test]
; In test non facciamo upload seriale con `make upload` (lo salta),
; ma lasciamo la config identica per build e uploadfs.
build_flags =
  ${env.build_flags}
  -DCONFIG_ENV_TEST

[env:esp32-ota]
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino
monitor_speed = 115200

; Stessa toolchain di prod
board_build.filesystem = spiffs
board_build.partitions = default_ota.csv
monitor_filters = esp32_exception_decoder, time, colorize

extra_scripts =
  pre:scripts/generate_version.py
  pre:scripts/uploadfs.py

lib_deps =
  PubSubClient
  WiFi
  Wire
  ESPmDNS
  ArduinoOTA
  mobizt/ESP Mail Client @ ^3.4.21
  mathieucarbou/ESP Async WebServer @ 3.0.6
  mathieucarbou/Async TCP @ 3.1.4
  bblanchon/ArduinoJson @ ^6

build_flags =
  -include src/version_auto.h
  -DCONFIG_ENV_PROD

; OTA nativo (direct-to-ESP)
upload_protocol = espota
; upload_port lo passi da CLI (Makefile) con --upload-port
