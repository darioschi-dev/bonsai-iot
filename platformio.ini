[platformio]
default_envs = esp32-prod

[env]
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino
monitor_speed = 115200

; Filesystem & partitions
board_build.filesystem = spiffs
board_build.partitions = partitions_ota.csv
monitor_filters = esp32_exception_decoder, time, colorize

; Script comuni: genera versione e gestisce uploadfs
extra_scripts =
  pre:scripts/generate_version.py
  pre:scripts/uploadfs.py

lib_deps =
  PubSubClient
  WiFi
  Wire
  ESPmDNS
  ArduinoOTA
  mobizt/ESP Mail Client @ ^3.4.21
  mathieucarbou/ESP Async WebServer @ 3.0.6
  mathieucarbou/Async TCP @ 3.1.4
  bblanchon/ArduinoJson @ ^6

; Forza l'inclusione dell'header generato in include/
build_flags =
  -include include/version_auto.h

[env:esp32-prod]
upload_protocol = esptool
upload_port = /dev/cu.usbserial-0001
build_flags =
  ${env.build_flags}
  -DCONFIG_ENV_PROD
  -DCONFIG_ESP_COREDUMP_ENABLE=0
  -DCONFIG_ESP_COREDUMP_ENABLE_TO_FLASH=0

[env:esp32-test]
build_flags =
  ${env.build_flags}
  -DCONFIG_ENV_TEST

[env:esp32-ota]
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino
monitor_speed = 115200
board_build.filesystem = spiffs
board_build.partitions = partitions_ota.csv
monitor_filters = esp32_exception_decoder, time, colorize
extra_scripts =
  pre:scripts/generate_version.py
  pre:scripts/uploadfs.py
lib_deps = ${env.lib_deps}
build_flags =
  -include include/version_auto.h
  -DCONFIG_ENV_PROD
upload_protocol = espota
; upload_port passato da CLI/Makefile
